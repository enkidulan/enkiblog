[buildout]
parts +=
    config_file
    secrets_file
    wsgi_loader


[config_file]
recipe = collective.recipe.template
sqlalchemy_url =
test_sqlalchemy_url =
port = 6543
include_ini_file = resource://websauna/conf/production.ini
site_id = enkiblog
site_email_prefix = [enkiblog]

file_path = ${dirs:conf}/config.ini
websauna_secrets_file = ${dirs:conf}/secrets.ini

output = ${:file_path}
input = inline:
    # pserve and command line configuration for a local development machine

    [includes]
    include_ini_files =  ${:include_ini_file}  resource://enkiblog/conf/base.ini  resource://websauna/conf/base.ini

    [app:main]
    websauna.site_id = ${:site_id}
    websauna.site_email_prefix = ${:site_email_prefix}
    sqlalchemy.url = ${:sqlalchemy_url}
    websauna.secrets_file = ${:websauna_secrets_file}

    [alembic]
    # path to migration scripts
    script_location = ${buildout:directory}/src/enkiblog/alembic


    [handler_file]
    args = ('${dirs:logs}/websauna.log','a')


[secrets_file]
recipe = collective.recipe.template
file_path = ${config_file:websauna_secrets_file}
output = ${:file_path}
overwrite = False
input = inline:
    # Secrets for production environments.
    # Note that this file is never committed, you need to copy it around by hand.

    [authentication]
    # This is a secret seed used in email login
    secret = {{authentication_random}}

    [authomatic]
    # This is a secret seed used in various OAuth related keys
    secret = {{authomatic_random}}

    # Get Facebook consumer key and consumer secret from http://developer.facebook.com/
    [facebook]
    class = authomatic.providers.oauth2.Facebook
    consumer_key =
    consumer_secret =
    scope = user_about_me, email
    mapper = websauna.system.user.social.FacebookMapper

    # The secret used to hash session keys
    [session]
    secret = {{session_random}}


[wsgi_loader]
recipe = collective.recipe.template
module_name = enkiblog_web_sauna_wsgi
file_path = ${buildout:directory}/${:module_name}.py
output = ${:file_path}
input = inline:
    # Copypasted from https://github.com/websauna/websauna.ansible/blob/master/roles/websauna.site/templates/pyramid.wsgi
    import sys
    # Some debug to uwsgi.log so we can troubleshoot situations
    print("Starting WSGI, Python is {}, sys.path is {}".format(sys.version, sys.path))

    # TODO: We need to have this dummy entry point load call, otherwise namespaced websauna packages do not seem to import and I was not unable to resolve why
    # I suspect some of the packages (websauna.viewconfig) clashes with the Python installation and Python doesn't figure out it's actually a properly namespaced packages. Alternative explanation is that I run websauna in development mode pip -e websauna
    from pkg_resources import load_entry_point
    load_entry_point("websauna", "paste.app_factory", "main")

    # Poke deep into pyramid.paster to supply our own configincluder
    from websauna.utils.configincluder import monkey_patch_paster_config_parser
    monkey_patch_paster_config_parser()

    from pyramid.paster import get_app
    from websauna.system.devop.cmdline import setup_logging

    ini_path = '${config_file:file_path}'
    setup_logging(ini_path)
    application = get_app(ini_path, 'main')
